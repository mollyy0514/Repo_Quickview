{"ast":null,"code":"import _createClass from \"/Users/molly/Desktop/React/Repo_Quickview/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/molly/Desktop/React/Repo_Quickview/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/molly/Desktop/React/Repo_Quickview/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/molly/Desktop/React/Repo_Quickview/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/molly/Desktop/React/Repo_Quickview/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/molly/Desktop/React/Repo_Quickview/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { Deprecation } from 'deprecation';\nimport once from 'once';\nvar logOnceCode = once(function (deprecation) {\n  return console.warn(deprecation);\n});\nvar logOnceHeaders = once(function (deprecation) {\n  return console.warn(deprecation);\n});\n/**\n * Error with extra properties to help with debugging\n */\n\nvar RequestError = /*#__PURE__*/function (_Error) {\n  _inherits(RequestError, _Error);\n\n  var _super = _createSuper(RequestError);\n\n  function RequestError(message, statusCode, options) {\n    var _this;\n\n    _classCallCheck(this, RequestError);\n\n    _this = _super.call(this, message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    }\n\n    _this.name = \"HttpError\";\n    _this.status = statusCode;\n    var headers;\n\n    if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n      headers = options.headers;\n    }\n\n    if (\"response\" in options) {\n      _this.response = options.response;\n      headers = options.response.headers;\n    } // redact request credentials without mutating original request options\n\n\n    var requestCopy = Object.assign({}, options.request);\n\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n      });\n    }\n\n    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit\n    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n    .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\") // OAuth tokens can be passed as URL query parameters, although it is not recommended\n    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n    .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    _this.request = requestCopy; // deprecations\n\n    Object.defineProperty(_assertThisInitialized(_this), \"code\", {\n      get: function get() {\n        logOnceCode(new Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n        return statusCode;\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), \"headers\", {\n      get: function get() {\n        logOnceHeaders(new Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n        return headers || {};\n      }\n    });\n    return _this;\n  }\n\n  return _createClass(RequestError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport { RequestError };","map":{"version":3,"mappings":";;;;;;;;AAEA,IAAMA,WAAW,GAAGC,IAAI,CAAC,UAACC,WAAD;AAAA,SAAiBC,OAAO,CAACC,IAAR,CAAaF,WAAb,CAAjB;AAAA,CAAD,CAAxB;AACA,IAAMG,cAAc,GAAGJ,IAAI,CAAC,UAACC,WAAD;AAAA,SAAiBC,OAAO,CAACC,IAAR,CAAaF,WAAb,CAAjB;AAAA,CAAD,CAA3B;AACA;AACA;AACA;;IACaI,Y;;;;;AACT,wBAAYC,OAAZ,EAAqBC,UAArB,EAAiCC,OAAjC,EAA0C;AAAA;;AAAA;;AACtC,8BAAMF,OAAN,EADsC,CAE9C;;AACA;;AACQ,QAAIG,KAAK,CAACC,iBAAV,EAA6B;AACzBD,WAAK,CAACC,iBAAN,gCAA8B,MAAKC,WAAnC;AACH;;AACD,UAAKC,IAAL,GAAY,WAAZ;AACA,UAAKC,MAAL,GAAcN,UAAd;AACA,QAAIO,OAAJ;;AACA,QAAI,aAAaN,OAAb,IAAwB,OAAOA,OAAO,CAACM,OAAf,KAA2B,WAAvD,EAAoE;AAChEA,aAAO,GAAGN,OAAO,CAACM,OAAlB;AACH;;AACD,QAAI,cAAcN,OAAlB,EAA2B;AACvB,YAAKO,QAAL,GAAgBP,OAAO,CAACO,QAAxB;AACAD,aAAO,GAAGN,OAAO,CAACO,QAAR,CAAiBD,OAA3B;AACH,KAhBqC,CAiB9C;;;AACQ,QAAME,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,OAAO,CAACW,OAA1B,CAApB;;AACA,QAAIX,OAAO,CAACW,OAAR,CAAgBL,OAAhB,CAAwBM,aAA5B,EAA2C;AACvCJ,iBAAW,CAACF,OAAZ,GAAsBG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,OAAO,CAACW,OAAR,CAAgBL,OAAlC,EAA2C;AAC7DM,qBAAa,EAAEZ,OAAO,CAACW,OAAR,CAAgBL,OAAhB,CAAwBM,aAAxB,CAAsCC,OAAtC,CAA8C,MAA9C,EAAsD,aAAtD;AAD8C,OAA3C,CAAtB;AAGH;;AACDL,eAAW,CAACM,GAAZ,GAAkBN,WAAW,CAACM,GAAZ,CAC1B;AACA;AAF0B,KAGbD,OAHa,CAGL,sBAHK,EAGmB,0BAHnB,EAI1B;AACA;AAL0B,KAMbA,OANa,CAML,qBANK,EAMkB,yBANlB,CAAlB;AAOA,UAAKF,OAAL,GAAeH,WAAf,CA/BsC,CAgC9C;;AACQC,UAAM,CAACM,cAAP,gCAA4B,MAA5B,EAAoC;AAChCC,SADgC,iBAC1B;AACFzB,mBAAW,CAAC,IAAI0B,WAAJ,CAAgB,0EAAhB,CAAD,CAAX;AACA,eAAOlB,UAAP;AACH;AAJ+B,KAApC;AAMAU,UAAM,CAACM,cAAP,gCAA4B,SAA5B,EAAuC;AACnCC,SADmC,iBAC7B;AACFpB,sBAAc,CAAC,IAAIqB,WAAJ,CAAgB,uFAAhB,CAAD,CAAd;AACA,eAAOX,OAAO,IAAI,EAAlB;AACH;AAJkC,KAAvC;AAvCsC;AA6CzC;;;iCA9C6BL,K","names":["logOnceCode","once","deprecation","console","warn","logOnceHeaders","RequestError","message","statusCode","options","Error","captureStackTrace","constructor","name","status","headers","response","requestCopy","Object","assign","request","authorization","replace","url","defineProperty","get","Deprecation"],"sources":["/Users/molly/Desktop/React/Repo_Quickview/node_modules/@octokit/request-error/dist-src/index.js"],"sourcesContent":["import { Deprecation } from \"deprecation\";\nimport once from \"once\";\nconst logOnceCode = once((deprecation) => console.warn(deprecation));\nconst logOnceHeaders = once((deprecation) => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\nexport class RequestError extends Error {\n    constructor(message, statusCode, options) {\n        super(message);\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        this.name = \"HttpError\";\n        this.status = statusCode;\n        let headers;\n        if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n            headers = options.headers;\n        }\n        if (\"response\" in options) {\n            this.response = options.response;\n            headers = options.response.headers;\n        }\n        // redact request credentials without mutating original request options\n        const requestCopy = Object.assign({}, options.request);\n        if (options.request.headers.authorization) {\n            requestCopy.headers = Object.assign({}, options.request.headers, {\n                authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\"),\n            });\n        }\n        requestCopy.url = requestCopy.url\n            // client_id & client_secret can be passed as URL query parameters to increase rate limit\n            // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n            .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\")\n            // OAuth tokens can be passed as URL query parameters, although it is not recommended\n            // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n            .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n        this.request = requestCopy;\n        // deprecations\n        Object.defineProperty(this, \"code\", {\n            get() {\n                logOnceCode(new Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n                return statusCode;\n            },\n        });\n        Object.defineProperty(this, \"headers\", {\n            get() {\n                logOnceHeaders(new Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n                return headers || {};\n            },\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}