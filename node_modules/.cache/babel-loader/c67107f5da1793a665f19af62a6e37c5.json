{"ast":null,"code":"import _asyncToGenerator from\"/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from\"react\";// import { Octokit } from \"@octokit/core\";\nimport{request}from\"@octokit/request\";import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import{useNavigate,Link}from\"react-router-dom\";import Results from\"./Results\";import RepoPage from\"./RepoPage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(){// 為什麼要設 useState？因為這樣才能讓他在整個程式碼裡面都使用\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),repo=_useState4[0],setRepo=_useState4[1];// const [loading, setLoading] = useState(true);\n// const [repoName, setRepoName] = useState(\"\");\n// const [repoDescription, setRepoDescription] = useState(\"\");\nvar _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),httpFlag=_useState6[0],setHttpFlag=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),inputFlag=_useState8[0],setInputFlag=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),searchFlag=_useState10[0],setSearchFlag=_useState10[1];var navigate=useNavigate();var handleChange=function handleChange(e){setUsername(e.target.value);};var handleClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return request('GET /users/{username}/repos',{username:username});case 3:result=_context.sent;console.log(\"useruser: \",username);console.log(result);setRepo(result);setHttpFlag(true);setInputFlag(true);_context.next=16;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);if(_context.t0.name===\"HttpError\"){// let checkUser = [false];\nsetHttpFlag(false);setInputFlag(true);}if(username==''){setHttpFlag(false);setInputFlag(false);}console.log(\"username\",username);case 16:console.log(repo);setSearchFlag(true);navigate(\"/users/\".concat(username,\"/repos\"));case 19:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function handleClick(){return _ref.apply(this,arguments);};}();console.log(httpFlag);console.log(\"continue\");return/*#__PURE__*/_jsxs(\"div\",{children:[searchFlag===false?/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"username\",type:\"text\",placeholder:\"Search\",value:username,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"searchBtn\",onClick:handleClick,children:\"Enter\"})]}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/Repo_Quickview/\",element:/*#__PURE__*/_jsx(\"div\",{})}),/*#__PURE__*/_jsx(Route,{path:\"/users/:username/repos\",element:httpFlag?/*#__PURE__*/ // <Results repo={ repo } header={ username }/>\n_jsx(Results,{repo:repo}):/*#__PURE__*/_jsxs(\"div\",{className:\"invalidDiv\",children:[/*#__PURE__*/_jsx(Link,{to:\"/Repo_Quickview/\",className:\"backToSearch\",onClick:function onClick(){window.location.href=\"/\";},children:\"Back\"}),/*#__PURE__*/_jsx(\"p\",{className:\"invalid\",children:\"No match User!\"})]})}),/*#__PURE__*/_jsx(Route,{path:\"/users//repos\",element:/*#__PURE__*/_jsxs(\"div\",{className:\"invalidDiv\",children:[/*#__PURE__*/_jsx(Link,{to:\"/Repo_Quickview/\",className:\"backToSearch\",onClick:function onClick(){window.location.href=\"/\";},children:\"Back\"}),/*#__PURE__*/_jsx(\"p\",{className:\"invalid\",children:\"Invalid Input!\"})]})}),/*#__PURE__*/_jsx(Route,{path:\"/users/:username/repos/:repoName\",element:/*#__PURE__*/_jsx(RepoPage,{})})]})})]});};export default Search;","map":{"version":3,"sources":["/Users/molly/Downloads/GitHub_Quickview-main/src/Search.js"],"names":["useState","useEffect","request","BrowserRouter","Router","Route","Routes","useNavigate","Link","Results","RepoPage","Search","username","setUsername","repo","setRepo","httpFlag","setHttpFlag","inputFlag","setInputFlag","searchFlag","setSearchFlag","navigate","handleChange","e","target","value","handleClick","result","console","log","name","window","location","href"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n// import { Octokit } from \"@octokit/core\";\nimport { request } from \"@octokit/request\";\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport Results from \"./Results\";\nimport RepoPage from \"./RepoPage\";\n\nconst Search = () => {\n\n    // 為什麼要設 useState？因為這樣才能讓他在整個程式碼裡面都使用\n    const [username, setUsername] = useState('');\n    const [repo, setRepo] = useState([]);\n    // const [loading, setLoading] = useState(true);\n    // const [repoName, setRepoName] = useState(\"\");\n    // const [repoDescription, setRepoDescription] = useState(\"\");\n    const [httpFlag, setHttpFlag] = useState(true);\n    const [inputFlag, setInputFlag] = useState(true);\n    const [searchFlag, setSearchFlag] = useState(false);\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        setUsername(e.target.value);\n    }\n\n    const handleClick = async () => {\n        // console.log(username);\n        try {\n            // const result = await axios(listUrl);\n            const result =  await request('GET /users/{username}/repos', {\n                username: username\n            })\n            console.log(\"useruser: \", username);\n            console.log(result);\n            setRepo(result);\n            setHttpFlag(true);\n            setInputFlag(true);\n        } catch(err) {\n            if (err.name === \"HttpError\") {\n                // let checkUser = [false];\n                setHttpFlag(false);\n                setInputFlag(true);\n            }\n            if (username == '') {\n                setHttpFlag(false);\n                setInputFlag(false);\n            }\n            console.log(\"username\", username);\n        }\n        console.log(repo);\n        setSearchFlag(true);\n        navigate(`/users/${username}/repos`);\n    }\n\n    console.log(httpFlag);\n\n    console.log(\"continue\");\n    return ( \n        <div>\n            {(searchFlag === false) ? (\n            <div className=\"search\">\n                <input className=\"username\" type=\"text\" placeholder=\"Search\" value={username} onChange={handleChange}></input>\n                <button className=\"searchBtn\" onClick={handleClick}>Enter</button>\n\n            </div>\n            ) : (<div />\n                )}\n            <div>  \n                <Routes>\n                    <Route path=\"/Repo_Quickview/\" element={<div />}></Route>\n                    <Route path=\"/users/:username/repos\" element={\n                        httpFlag ? (\n                            // <Results repo={ repo } header={ username }/>\n                            <Results repo={ repo } />\n                        ) : (\n                            <div className=\"invalidDiv\">\n                                <Link to=\"/Repo_Quickview/\" className=\"backToSearch\" onClick={() => {window.location.href=\"/\"}}>Back</Link>\n                                <p className=\"invalid\">No match User!</p>\n                            </div>\n                        )} \n                    />\n                    <Route path=\"/users//repos\" element={\n                        <div className=\"invalidDiv\">\n                            <Link to=\"/Repo_Quickview/\" className=\"backToSearch\" onClick={() => {window.location.href=\"/\"}}>Back</Link>\n                            <p className=\"invalid\">Invalid Input!</p>\n                        </div>\n                    } />\n\n                    <Route path=\"/users/:username/repos/:repoName\" element={<RepoPage />}></Route>\n                </Routes>\n            </div>\n\n        </div>\n     );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}