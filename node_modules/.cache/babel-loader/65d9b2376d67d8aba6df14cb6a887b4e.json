{"ast":null,"code":"var _jsxFileName = \"/Users/molly/Desktop/React/Repo_Quickview/src/Results_test.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { request } from \"@octokit/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 17\n    }\n  };\n});\n_c = StyledTableCell;\nconst StyledTableRow = styled(TableRow)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0\n    }\n  };\n});\n_c2 = StyledTableRow;\n\nconst Results_test = props => {\n  _s();\n\n  const {\n    repo\n  } = props;\n  console.log(\"REPOS: \", repo);\n  const searchOwner = props.header;\n\n  var repoInfoList = /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"hihi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 24\n  }, this);\n\n  const [repoLen, setRepoLen] = useState(-1);\n  const [repoOwner, setRepoOwner] = useState(\"\");\n  const [repoList, setRepoList] = useState([]);\n  useEffect(() => {\n    if (repo.data === undefined) {\n      console.log(\"repo data is undefined\");\n    } else {\n      setRepoLen(Object.keys(repo.data).length); // console.log(\"repolen setted\", repo.data, repoLen, Object.keys(repo.data).length)\n\n      resetRepoList(Object.keys(repo.data).length);\n    } // console.log(typeof(repo));\n\n  }, []);\n\n  const resetRepoList = l => {\n    if (repo.data === undefined) {\n      console.log(\"repo data is undefined\");\n    } else if (l > 0) {\n      let owner = repo.data[0].owner.login;\n      let newArray = []; // repo.data.map((item) => {\n      //     var info = {\n      //         id: '',\n      //         owner: '',\n      //         name: '',\n      //         starCnt: '',\n      //         description: '',\n      //     }\n      //     info.id = item.id;\n      //     info.owner = searchOwner;\n      //     info.name = item.name;\n      //     info.starCnt = item.stargazers_count;\n      //     info.description = item.description;\n      //     newArray.push(info);\n      //     console.log(\"debug: \", newArray);\n      // })\n      // console.log(\"final input: \", newArray);\n\n      setRepoOwner(owner);\n      setRepoList(repo.data);\n    } else {\n      setRepoList(\"No Repos found!\"); // console.log(\"nothing...\")\n    }\n  }; // const [items, setItems] = useState([]);\n\n\n  const [hasMore, sethasMore] = useState(true);\n  const [page, setpage] = useState(2);\n\n  const fetchComments = async () => {\n    const res = await request('GET /users/{username}/repos', {\n      username: repoOwner,\n      per_page: 10,\n      sort: 'created',\n      page: page\n    });\n    const data = res.data;\n    console.log(\"data: \", data);\n    return data;\n  };\n\n  const fetchData = async () => {\n    const commentsFormServer = await fetchComments();\n    setRepoList([...repoList, ...commentsFormServer]);\n\n    if (commentsFormServer.length === 0 || commentsFormServer.length < 10) {\n      sethasMore(false);\n    }\n\n    setpage(page + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Repo_Quickview/\",\n      className: \"backToSearch\",\n      onClick: () => {\n        window.location.href = \"/Repo_Quickview/\";\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"user\",\n      children: repoOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), repoLen > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sort\",\n      children: \"sorted by created time \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), repoLen === -1 ? repoInfoList = /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 32\n    }, this) : repoLen > 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 700\n        },\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Repository Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Stars\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          className: \"repoTable\",\n          children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n            dataLength: repoList.length //This is important field to render the next data\n            ,\n            next: fetchData,\n            hasMore: hasMore,\n            loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 45\n            }, this),\n            endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Yay! You have seen it all\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this),\n            children: repoList.map(item => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              hover: true,\n              role: \"checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                className: \"tableRepoName\",\n                component: \"th\",\n                scope: \"row\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/users/${repoOwner}/repos/${item.name}`,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                className: \"descr\",\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/users/${repoOwner}/repos/${item.name}`,\n                  children: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                className: \"starCnt\",\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/users/${repoOwner}/repos/${item.name}`,\n                  children: item.stargazers_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }, this) : repoInfoList = /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"noRepo\",\n      children: \"No Repositary found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 40\n    }, this) // <div className=\"noRepo\">No Repositary found.</div>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Results_test, \"kph1uX+XmRvqQaIkiUvSJ6eH+AU=\");\n\n_c3 = Results_test;\nexport default Results_test;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"StyledTableRow\");\n$RefreshReg$(_c3, \"Results_test\");","map":{"version":3,"sources":["/Users/molly/Desktop/React/Repo_Quickview/src/Results_test.js"],"names":["useState","useEffect","Link","React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","InfiniteScroll","request","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","action","hover","border","Results_test","props","repo","console","log","searchOwner","header","repoInfoList","repoLen","setRepoLen","repoOwner","setRepoOwner","repoList","setRepoList","data","undefined","Object","keys","length","resetRepoList","l","owner","login","newArray","hasMore","sethasMore","page","setpage","fetchComments","res","username","per_page","sort","fetchData","commentsFormServer","window","location","href","minWidth","textAlign","map","item","name","description","stargazers_count","id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { request } from \"@octokit/request\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 17,\n    },\n  }));\n\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n\nconst Results_test = (props) => {\n \n    const { repo } = props;\n    console.log(\"REPOS: \", repo);\n    const searchOwner = props.header;\n\n    var repoInfoList = <li>hihi</li>;\n    const [repoLen, setRepoLen] = useState(-1);\n    const [repoOwner, setRepoOwner] = useState(\"\");\n    const [repoList, setRepoList] = useState([]);\n\n    useEffect(() => {\n        if (repo.data === undefined) {\n            console.log(\"repo data is undefined\")\n        }\n        else {\n            setRepoLen(Object.keys(repo.data).length);\n            // console.log(\"repolen setted\", repo.data, repoLen, Object.keys(repo.data).length)\n            resetRepoList(Object.keys(repo.data).length);\n        }\n        // console.log(typeof(repo));\n    }, [])\n\n\n\n    const resetRepoList = (l) => {\n        if (repo.data === undefined) {\n            console.log(\"repo data is undefined\")\n        }\n        else if (l > 0) {\n            let owner = repo.data[0].owner.login;\n            let newArray = [];\n\n            // repo.data.map((item) => {\n            //     var info = {\n            //         id: '',\n            //         owner: '',\n            //         name: '',\n            //         starCnt: '',\n            //         description: '',\n            //     }\n            //     info.id = item.id;\n            //     info.owner = searchOwner;\n            //     info.name = item.name;\n            //     info.starCnt = item.stargazers_count;\n            //     info.description = item.description;\n\n            //     newArray.push(info);\n            //     console.log(\"debug: \", newArray);\n                \n            // })\n            // console.log(\"final input: \", newArray);\n            setRepoOwner(owner);\n            setRepoList(repo.data);\n        }\n        else {\n            setRepoList(\"No Repos found!\");\n            // console.log(\"nothing...\")\n        }\n    }\n\n    // const [items, setItems] = useState([]);\n    const [hasMore, sethasMore] = useState(true);\n    const [page, setpage] = useState(2);\n\n    const fetchComments = async () => {\n\n        const res =  await request('GET /users/{username}/repos', {\n            username: repoOwner,\n            per_page: 10,\n            sort: 'created',\n            page: page\n        })\n        const data = res.data;\n        console.log(\"data: \", data)\n        return data;\n    };\n\n    const fetchData = async () => {\n        const commentsFormServer = await fetchComments();\n\n        setRepoList([...repoList, ...commentsFormServer]);\n        if (commentsFormServer.length === 0 || commentsFormServer.length < 10) {\n            sethasMore(false);\n        }\n        setpage(page + 1);\n    };\n\n    return (\n        <div className=\"results\">\n            <Link to=\"/Repo_Quickview/\" className=\"backToSearch\" onClick={() => {window.location.href=\"/Repo_Quickview/\"}}>Back</Link>\n            <header className=\"user\">\n                { repoOwner }\n            </header>\n            \n            {(repoLen > 0) ? (<p className=\"sort\">sorted by created time </p>):(<></>)}\n\n            {(repoLen === -1) ? (\n                repoInfoList = <li></li>\n                 ) : ((repoLen > 0) ? (\n                        <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                                <TableHead>\n                                <TableRow>\n                                    <StyledTableCell>Repository Name</StyledTableCell>\n                                    <StyledTableCell align=\"right\">Description</StyledTableCell>\n                                    <StyledTableCell align=\"right\">Stars&nbsp;</StyledTableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody className=\"repoTable\">\n                                <InfiniteScroll\n                                    dataLength={repoList.length} //This is important field to render the next data\n                                    next={fetchData}\n                                    hasMore={hasMore}\n                                    loader={<h4>Loading...</h4>}\n                                    endMessage={\n                                        <p style={{ textAlign: 'center' }}>\n                                            <b>Yay! You have seen it all</b>\n                                        </p>\n                                    }\n                                >\n                                {repoList.map((item) => (\n                                    <StyledTableRow hover role=\"checkbox\" key={item.id}>\n                                        <StyledTableCell className=\"tableRepoName\" component=\"th\" scope=\"row\">\n                                            <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                {item.name}\n                                            </Link>\n                                        </StyledTableCell>\n                                        <StyledTableCell className=\"descr\" align=\"right\">\n                                                <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                    {item.description}\n                                                </Link>\n                                            </StyledTableCell>\n                                        <StyledTableCell className=\"starCnt\" align=\"right\">\n                                            <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                {item.stargazers_count}\n                                            </Link>\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                ))}\n\n                                \n                                    {/* {repoList.map((item) => {\n                                        return <StyledTableRow hover role=\"checkbox\" key={item.id}>\n                                        <StyledTableCell className=\"tableRepoName\" component=\"th\" scope=\"row\">\n                                            <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                {item.name}\n                                            </Link>\n                                        </StyledTableCell>\n                                        <StyledTableCell className=\"starCnt\" align=\"right\">\n                                                <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                    {item.description}\n                                                </Link>\n                                            </StyledTableCell>\n                                        <StyledTableCell className=\"starCnt\" align=\"right\">\n                                            <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                {item.stargazers_count}\n                                            </Link>\n                                        </StyledTableCell>\n                                    </StyledTableRow> ;\n                                    })} */}\n                                </InfiniteScroll>\n\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        \n                    ) : (\n                        repoInfoList = <li className=\"noRepo\">No Repositary found.</li>\n                        // <div className=\"noRepo\">No Repositary found.</div>\n                    )\n                 )}\n                 \n        </div>\n     );\n}\n \nexport default Results_test;\n"]},"metadata":{},"sourceType":"module"}