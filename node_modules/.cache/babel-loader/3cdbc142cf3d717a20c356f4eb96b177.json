{"ast":null,"code":"var _jsxFileName = \"/Users/molly/Downloads/GitHub_Quickview-main/src/RepoPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Route, useParams, Routes, Link, useNavigate } from \"react-router-dom\";\nimport { request } from \"@octokit/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RepoPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    username,\n    repoName\n  } = useParams();\n  const [resultGot, setResultGot] = useState();\n  const [repoInfo, setRepoInfo] = useState({\n    id: '',\n    owner: '',\n    name: '',\n    starCnt: '',\n    time: '',\n    fullname: '',\n    url: '',\n    description: ''\n  });\n  const [errorFlag, setErrorFlag] = useState();\n  useEffect(async () => {\n    // console.log(username);\n    try {\n      // const result = await axios(listUrl);\n      const result = await request('GET /repos/{username}/{repo}', {\n        username: username,\n        repo: repoName\n      });\n      console.log(\"useruser: \", username);\n      console.log(result);\n      setResultGot(result);\n      setErrorFlag(true);\n    } catch (err) {\n      if (err.name === \"HttpError\") {\n        // let checkUser = [false];\n        setErrorFlag(false);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (errorFlag == true) {\n      console.log(\"in\");\n      setRepoInfo({\n        id: resultGot.data.id,\n        owner: username,\n        name: repoName,\n        starCnt: resultGot.data.stargazers_count,\n        time: resultGot.data.created_at,\n        fullname: resultGot.data.full_name,\n        url: resultGot.data.html_url,\n        description: resultGot.data.description\n      });\n      console.log(\"repoInfo\", repoInfo);\n    }\n  }, [errorFlag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repoPage\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"backToSearch\",\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"repoName\",\n      children: repoInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"owner\",\n      children: repoInfo.owner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"urlDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"ghUrl\",\n        href: repoInfo.url,\n        children: \"GitHub Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoLi\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"FULLNAME: \", repoInfo.fullname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"STARS: \", repoInfo.starCnt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"CREATED TIME: \", repoInfo.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"DESCRIPTION: \", repoInfo.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RepoPage, \"plLtTJ0EjSr3rexNGkma1vSrl8A=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = RepoPage;\nexport default RepoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepoPage\");","map":{"version":3,"sources":["/Users/molly/Downloads/GitHub_Quickview-main/src/RepoPage.js"],"names":["useState","useEffect","Route","useParams","Routes","Link","useNavigate","request","RepoPage","navigate","username","repoName","resultGot","setResultGot","repoInfo","setRepoInfo","id","owner","name","starCnt","time","fullname","url","description","errorFlag","setErrorFlag","result","repo","console","log","err","data","stargazers_count","created_at","full_name","html_url"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Route, useParams, Routes, Link, useNavigate } from \"react-router-dom\";\nimport { request } from \"@octokit/request\";\n\nconst RepoPage = () => {\n    const navigate = useNavigate();\n    const { username, repoName } = useParams();\n    const [resultGot, setResultGot] = useState();\n    const [repoInfo, setRepoInfo] = useState({\n        id: '',\n        owner: '',\n        name: '',\n        starCnt: '',\n        time: '',\n        fullname: '',\n        url: '',\n        description: '',\n    });\n    const [errorFlag, setErrorFlag] = useState();\n\n    useEffect(async() => {\n            // console.log(username);\n            try {\n                // const result = await axios(listUrl);\n                const result =  await request('GET /repos/{username}/{repo}', {\n                    username: username,\n                    repo: repoName\n                })\n                console.log(\"useruser: \", username);\n                console.log(result);\n                setResultGot(result);\n                setErrorFlag(true);\n                \n            } catch(err) {\n                if (err.name === \"HttpError\") {\n                    // let checkUser = [false];\n                    setErrorFlag(false);\n                    \n                }\n\n            }\n        \n    }, [])\n\n    useEffect(() => {\n        if (errorFlag == true) {\n            console.log(\"in\");\n            setRepoInfo({\n                id: resultGot.data.id,\n                owner: username,\n                name: repoName,\n                starCnt: resultGot.data.stargazers_count,\n                time: resultGot.data.created_at,\n                fullname: resultGot.data.full_name,\n                url: resultGot.data.html_url,\n                description: resultGot.data.description,\n            });\n            console.log(\"repoInfo\", repoInfo);\n        }\n    }, [errorFlag])\n\n    return ( \n        <div className=\"repoPage\">\n            <Link to=\"/\" className=\"backToSearch\" onClick={() => navigate(-1)}>Back</Link>\n            <header className=\"repoName\">\n                { repoInfo.name }\n            </header>\n            <h3 className=\"owner\">\n                {repoInfo.owner}\n            </h3>\n            <div className=\"urlDiv\">\n            <a className=\"ghUrl\" href={repoInfo.url}>GitHub Page</a>\n            </div>\n            <div className=\"infoLi\">\n            <ul>\n                <li>\n                    FULLNAME: {repoInfo.fullname}\n                </li>\n                <li>\n                    STARS: {repoInfo.starCnt}\n                </li>\n                <li>\n                    CREATED TIME: {repoInfo.time}\n                </li>\n                <li>\n                    DESCRIPTION: {repoInfo.description}\n                </li>\n            </ul>\n            </div>\n        </div>\n    );\n}\n \nexport default RepoPage;"]},"metadata":{},"sourceType":"module"}