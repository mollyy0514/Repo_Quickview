{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@babel/runtime/regenerator/index.js\";\nimport { endpoint } from '@octokit/endpoint';\nimport { getUserAgent } from 'universal-user-agent';\nimport { isPlainObject } from 'is-plain-object';\nimport nodeFetch from 'node-fetch';\nimport { RequestError } from '@octokit/request-error';\nvar VERSION = \"5.6.3\";\n\nfunction getBufferResponse(response) {\n  return response.arrayBuffer();\n}\n\nfunction fetchWrapper(requestOptions) {\n  var log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;\n\n  if (isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n    requestOptions.body = JSON.stringify(requestOptions.body);\n  }\n\n  var headers = {};\n  var status;\n  var url;\n  var fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;\n  return fetch(requestOptions.url, Object.assign({\n    method: requestOptions.method,\n    body: requestOptions.body,\n    headers: requestOptions.headers,\n    redirect: requestOptions.redirect\n  }, // `requestOptions.request.agent` type is incompatible\n  // see https://github.com/octokit/types.ts/pull/264\n  requestOptions.request)).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var _iterator, _step, keyAndValue, matches, deprecationLink, data, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = response.url;\n              status = response.status;\n              _iterator = _createForOfIteratorHelper(response.headers);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  keyAndValue = _step.value;\n                  headers[keyAndValue[0]] = keyAndValue[1];\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              if (\"deprecation\" in headers) {\n                matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n                deprecationLink = matches && matches.pop();\n                log.warn(\"[@octokit/request] \\\"\".concat(requestOptions.method, \" \").concat(requestOptions.url, \"\\\" is deprecated. It is scheduled to be removed on \").concat(headers.sunset).concat(deprecationLink ? \". See \".concat(deprecationLink) : \"\"));\n              }\n\n              if (!(status === 204 || status === 205)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (!(requestOptions.method === \"HEAD\")) {\n                _context.next = 11;\n                break;\n              }\n\n              if (!(status < 400)) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 10:\n              throw new RequestError(response.statusText, status, {\n                response: {\n                  url: url,\n                  status: status,\n                  headers: headers,\n                  data: undefined\n                },\n                request: requestOptions\n              });\n\n            case 11:\n              if (!(status === 304)) {\n                _context.next = 24;\n                break;\n              }\n\n              _context.t0 = RequestError;\n              _context.t1 = status;\n              _context.t2 = url;\n              _context.t3 = status;\n              _context.t4 = headers;\n              _context.next = 19;\n              return getResponseData(response);\n\n            case 19:\n              _context.t5 = _context.sent;\n              _context.t6 = {\n                url: _context.t2,\n                status: _context.t3,\n                headers: _context.t4,\n                data: _context.t5\n              };\n              _context.t7 = requestOptions;\n              _context.t8 = {\n                response: _context.t6,\n                request: _context.t7\n              };\n              throw new _context.t0(\"Not modified\", _context.t1, _context.t8);\n\n            case 24:\n              if (!(status >= 400)) {\n                _context.next = 30;\n                break;\n              }\n\n              _context.next = 27;\n              return getResponseData(response);\n\n            case 27:\n              data = _context.sent;\n              error = new RequestError(toErrorMessage(data), status, {\n                response: {\n                  url: url,\n                  status: status,\n                  headers: headers,\n                  data: data\n                },\n                request: requestOptions\n              });\n              throw error;\n\n            case 30:\n              return _context.abrupt(\"return\", getResponseData(response));\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()).then(function (data) {\n    return {\n      status: status,\n      url: url,\n      headers: headers,\n      data: data\n    };\n  }).catch(function (error) {\n    if (error instanceof RequestError) throw error;\n    throw new RequestError(error.message, 500, {\n      request: requestOptions\n    });\n  });\n}\n\nfunction getResponseData(_x2) {\n  return _getResponseData.apply(this, arguments);\n}\n\nfunction _getResponseData() {\n  _getResponseData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n    var contentType;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            contentType = response.headers.get(\"content-type\");\n\n            if (!/application\\/json/.test(contentType)) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", response.json());\n\n          case 3:\n            if (!(!contentType || /^text\\/|charset=utf-8$/.test(contentType))) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", response.text());\n\n          case 5:\n            return _context2.abrupt(\"return\", getBufferResponse(response));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getResponseData.apply(this, arguments);\n}\n\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\") return data; // istanbul ignore else - just in case\n\n  if (\"message\" in data) {\n    if (Array.isArray(data.errors)) {\n      return \"\".concat(data.message, \": \").concat(data.errors.map(JSON.stringify).join(\", \"));\n    }\n\n    return data.message;\n  } // istanbul ignore next - just in case\n\n\n  return \"Unknown error: \".concat(JSON.stringify(data));\n}\n\nfunction withDefaults(oldEndpoint, newDefaults) {\n  var endpoint = oldEndpoint.defaults(newDefaults);\n\n  var newApi = function newApi(route, parameters) {\n    var endpointOptions = endpoint.merge(route, parameters);\n\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint.parse(endpointOptions));\n    }\n\n    var request = function request(route, parameters) {\n      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n    };\n\n    Object.assign(request, {\n      endpoint: endpoint,\n      defaults: withDefaults.bind(null, endpoint)\n    });\n    return endpointOptions.request.hook(request, endpointOptions);\n  };\n\n  return Object.assign(newApi, {\n    endpoint: endpoint,\n    defaults: withDefaults.bind(null, endpoint)\n  });\n}\n\nvar request = withDefaults(endpoint, {\n  headers: {\n    \"user-agent\": \"octokit-request.js/\".concat(VERSION, \" \").concat(getUserAgent())\n  }\n});\nexport { request };","map":{"version":3,"mappings":"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","names":["VERSION","getBufferResponse","response","arrayBuffer","fetchWrapper","requestOptions","log","request","console","isPlainObject","body","Array","isArray","JSON","stringify","headers","status","url","fetch","nodeFetch","Object","assign","method","redirect","then","keyAndValue","matches","link","match","deprecationLink","pop","warn","sunset","RequestError","statusText","data","undefined","getResponseData","error","toErrorMessage","catch","message","contentType","get","test","json","text","getBuffer","errors","map","join","withDefaults","oldEndpoint","newDefaults","endpoint","defaults","newApi","route","parameters","endpointOptions","merge","hook","parse","bind","getUserAgent"],"sources":["/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@octokit/request/dist-src/version.js","/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@octokit/request/dist-src/get-buffer-response.js","/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@octokit/request/dist-src/fetch-wrapper.js","/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@octokit/request/dist-src/with-defaults.js","/Users/molly/Downloads/GitHub_Quickview-main/node_modules/@octokit/request/dist-src/index.js"],"sourcesContent":["export const VERSION = \"5.6.3\";\n","export default function getBufferResponse(response) {\n    return response.arrayBuffer();\n}\n","import { isPlainObject } from \"is-plain-object\";\nimport nodeFetch from \"node-fetch\";\nimport { RequestError } from \"@octokit/request-error\";\nimport getBuffer from \"./get-buffer-response\";\nexport default function fetchWrapper(requestOptions) {\n    const log = requestOptions.request && requestOptions.request.log\n        ? requestOptions.request.log\n        : console;\n    if (isPlainObject(requestOptions.body) ||\n        Array.isArray(requestOptions.body)) {\n        requestOptions.body = JSON.stringify(requestOptions.body);\n    }\n    let headers = {};\n    let status;\n    let url;\n    const fetch = (requestOptions.request && requestOptions.request.fetch) || nodeFetch;\n    return fetch(requestOptions.url, Object.assign({\n        method: requestOptions.method,\n        body: requestOptions.body,\n        headers: requestOptions.headers,\n        redirect: requestOptions.redirect,\n    }, \n    // `requestOptions.request.agent` type is incompatible\n    // see https://github.com/octokit/types.ts/pull/264\n    requestOptions.request))\n        .then(async (response) => {\n        url = response.url;\n        status = response.status;\n        for (const keyAndValue of response.headers) {\n            headers[keyAndValue[0]] = keyAndValue[1];\n        }\n        if (\"deprecation\" in headers) {\n            const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n            const deprecationLink = matches && matches.pop();\n            log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n        }\n        if (status === 204 || status === 205) {\n            return;\n        }\n        // GitHub API returns 200 for HEAD requests\n        if (requestOptions.method === \"HEAD\") {\n            if (status < 400) {\n                return;\n            }\n            throw new RequestError(response.statusText, status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: undefined,\n                },\n                request: requestOptions,\n            });\n        }\n        if (status === 304) {\n            throw new RequestError(\"Not modified\", status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: await getResponseData(response),\n                },\n                request: requestOptions,\n            });\n        }\n        if (status >= 400) {\n            const data = await getResponseData(response);\n            const error = new RequestError(toErrorMessage(data), status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data,\n                },\n                request: requestOptions,\n            });\n            throw error;\n        }\n        return getResponseData(response);\n    })\n        .then((data) => {\n        return {\n            status,\n            url,\n            headers,\n            data,\n        };\n    })\n        .catch((error) => {\n        if (error instanceof RequestError)\n            throw error;\n        throw new RequestError(error.message, 500, {\n            request: requestOptions,\n        });\n    });\n}\nasync function getResponseData(response) {\n    const contentType = response.headers.get(\"content-type\");\n    if (/application\\/json/.test(contentType)) {\n        return response.json();\n    }\n    if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n        return response.text();\n    }\n    return getBuffer(response);\n}\nfunction toErrorMessage(data) {\n    if (typeof data === \"string\")\n        return data;\n    // istanbul ignore else - just in case\n    if (\"message\" in data) {\n        if (Array.isArray(data.errors)) {\n            return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n        }\n        return data.message;\n    }\n    // istanbul ignore next - just in case\n    return `Unknown error: ${JSON.stringify(data)}`;\n}\n","import fetchWrapper from \"./fetch-wrapper\";\nexport default function withDefaults(oldEndpoint, newDefaults) {\n    const endpoint = oldEndpoint.defaults(newDefaults);\n    const newApi = function (route, parameters) {\n        const endpointOptions = endpoint.merge(route, parameters);\n        if (!endpointOptions.request || !endpointOptions.request.hook) {\n            return fetchWrapper(endpoint.parse(endpointOptions));\n        }\n        const request = (route, parameters) => {\n            return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n        };\n        Object.assign(request, {\n            endpoint,\n            defaults: withDefaults.bind(null, endpoint),\n        });\n        return endpointOptions.request.hook(request, endpointOptions);\n    };\n    return Object.assign(newApi, {\n        endpoint,\n        defaults: withDefaults.bind(null, endpoint),\n    });\n}\n","import { endpoint } from \"@octokit/endpoint\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nimport withDefaults from \"./with-defaults\";\nexport const request = withDefaults(endpoint, {\n    headers: {\n        \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}