{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCurrentColorScheme;\nexports.getColorScheme = getColorScheme;\nexports.getSystemMode = getSystemMode;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _getInitColorSchemeScript = require(\"./getInitColorSchemeScript\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (mql.matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  }\n\n  return undefined;\n}\n\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n\n  return undefined;\n}\n\nfunction getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n\n    return undefined;\n  });\n}\n\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  let value;\n\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n\n  return value || defaultValue;\n}\n\nfunction useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = resolveValue(modeStorageKey, defaultMode);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: resolveValue(`${colorSchemeStorageKey}-light`) || defaultLightColorScheme,\n      darkColorScheme: resolveValue(`${colorSchemeStorageKey}-dark`) || defaultDarkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      const newMode = !mode ? defaultMode : mode;\n\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n\n      return (0, _extends2.default)({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value || typeof value === 'string') {\n      if (value && !supportedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = (0, _extends2.default)({}, currentState);\n\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n\n          processState(currentState, mode => {\n            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !supportedColorSchemes.includes(value.light) || value.dark && !supportedColorSchemes.includes(value.dark)) {\n      console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n    } else {\n      setState(currentState => {\n        const newState = (0, _extends2.default)({}, currentState);\n\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n\n        return newState;\n      });\n\n      if (value.light) {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, value.light);\n      }\n\n      if (value.dark) {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, value.dark);\n      }\n    }\n  }, [colorSchemeStorageKey, supportedColorSchemes, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => (0, _extends2.default)({}, currentState, {\n        systemMode: e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = function () {\n      return mediaListener.current(...arguments);\n    }; // Always listen to System preference\n\n\n    const media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(() => {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n\n    processState(state, mode => {\n      if (mode === 'light') {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, state.lightColorScheme);\n      }\n\n      if (mode === 'dark') {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode]);\n  return (0, _extends2.default)({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}","map":{"version":3,"sources":["/Users/molly/Desktop/React/Repo_Quickview/node_modules/@mui/system/cssVars/useCurrentColorScheme.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","useCurrentColorScheme","getColorScheme","getSystemMode","_extends2","React","_interopRequireWildcard","_getInitColorSchemeScript","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","lightColorScheme","darkColorScheme","resolveValue","defaultValue","localStorage","getItem","e","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","DEFAULT_MODE_STORAGE_KEY","colorSchemeStorageKey","DEFAULT_COLOR_SCHEME_STORAGE_KEY","joinedColorSchemes","join","setState","useState","initialMode","colorScheme","setMode","useCallback","currentState","newMode","setItem","setColorScheme","includes","console","error","newState","light","dark","handleMediaQuery","mediaListener","useRef","current","useEffect","handler","media","addListener","removeListener","handleStorage","event","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCurrentColorScheme;\nexports.getColorScheme = getColorScheme;\nexports.getSystemMode = getSystemMode;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _getInitColorSchemeScript = require(\"./getInitColorSchemeScript\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (mql.matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  }\n\n  return undefined;\n}\n\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n\n  return undefined;\n}\n\nfunction getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n\n    return undefined;\n  });\n}\n\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  let value;\n\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n\n  return value || defaultValue;\n}\n\nfunction useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = resolveValue(modeStorageKey, defaultMode);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: resolveValue(`${colorSchemeStorageKey}-light`) || defaultLightColorScheme,\n      darkColorScheme: resolveValue(`${colorSchemeStorageKey}-dark`) || defaultDarkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      const newMode = !mode ? defaultMode : mode;\n\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n\n      return (0, _extends2.default)({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value || typeof value === 'string') {\n      if (value && !supportedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = (0, _extends2.default)({}, currentState);\n\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n\n          processState(currentState, mode => {\n            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !supportedColorSchemes.includes(value.light) || value.dark && !supportedColorSchemes.includes(value.dark)) {\n      console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n    } else {\n      setState(currentState => {\n        const newState = (0, _extends2.default)({}, currentState);\n\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n\n        return newState;\n      });\n\n      if (value.light) {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, value.light);\n      }\n\n      if (value.dark) {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, value.dark);\n      }\n    }\n  }, [colorSchemeStorageKey, supportedColorSchemes, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => (0, _extends2.default)({}, currentState, {\n        systemMode: e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args); // Always listen to System preference\n\n\n    const media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(() => {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n\n    processState(state, mode => {\n      if (mode === 'light') {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, state.lightColorScheme);\n      }\n\n      if (mode === 'dark') {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode]);\n  return (0, _extends2.default)({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}"]},"metadata":{},"sourceType":"script"}