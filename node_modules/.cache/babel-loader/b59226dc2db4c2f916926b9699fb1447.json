{"ast":null,"code":"var _jsxFileName = \"/Users/molly/Downloads/GitHub_Quickview-main/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // import { Octokit } from \"@octokit/core\";\n\nimport { request } from \"@octokit/request\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Results from \"./Results\";\nimport RepoPage from \"./RepoPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  // 為什麼要設 useState？因為這樣才能讓他在整個程式碼裡面都使用\n  const [username, setUsername] = useState('');\n  const [repo, setRepo] = useState([]); // const [loading, setLoading] = useState(true);\n  // const [repoName, setRepoName] = useState(\"\");\n  // const [repoDescription, setRepoDescription] = useState(\"\");\n\n  const [httpFlag, setHttpFlag] = useState(true);\n  const [inputFlag, setInputFlag] = useState(true);\n  const [searchFlag, setSearchFlag] = useState(false);\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    setUsername(e.target.value);\n  };\n\n  const handleClick = async () => {\n    // console.log(username);\n    try {\n      // const result = await axios(listUrl);\n      const result = await request('GET /users/{username}/repos', {\n        username: username\n      });\n      console.log(\"useruser: \", username);\n      console.log(result);\n      setRepo(result);\n      setHttpFlag(true);\n    } catch (err) {\n      if (err.name === \"HttpError\") {\n        // let checkUser = [false];\n        setHttpFlag(false);\n      } // if (username === '') {\n      //     setHttpFlag(false);\n      // }\n      // console.log(err.name);\n\n    }\n\n    console.log(repo);\n    setSearchFlag(true);\n    navigate(`/users/${username}/repos`);\n  };\n\n  console.log(httpFlag);\n  console.log(\"continue\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [searchFlag === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"username\",\n        type: \"text\",\n        placeholder: \"Search\",\n        value: username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtn\",\n        onClick: handleClick,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), inputFlag && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users/:username/repos\",\n          element: httpFlag === true ?\n          /*#__PURE__*/\n          // <Results repo={ repo } header={ username }/>\n          _jsxDEV(Results, {\n            repo: repo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unvalidDiv\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"backToSearch\",\n              onClick: () => {\n                window.location.href = \"/\";\n              },\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"unvalid\",\n              children: \"Unvalid User!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users/:username/repos/:repoName\",\n          element: /*#__PURE__*/_jsxDEV(RepoPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"zAlsONCiB6IKP8cI+0rvLhxNi8c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/molly/Downloads/GitHub_Quickview-main/src/Search.js"],"names":["useState","useEffect","request","BrowserRouter","Router","Route","Routes","useNavigate","Link","Results","RepoPage","Search","username","setUsername","repo","setRepo","httpFlag","setHttpFlag","inputFlag","setInputFlag","searchFlag","setSearchFlag","navigate","handleChange","e","target","value","handleClick","result","console","log","err","name","window","location","href"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n// import { Octokit } from \"@octokit/core\";\nimport { request } from \"@octokit/request\";\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport Results from \"./Results\";\nimport RepoPage from \"./RepoPage\";\n\nconst Search = () => {\n\n    // 為什麼要設 useState？因為這樣才能讓他在整個程式碼裡面都使用\n    const [username, setUsername] = useState('');\n    const [repo, setRepo] = useState([]);\n    // const [loading, setLoading] = useState(true);\n    // const [repoName, setRepoName] = useState(\"\");\n    // const [repoDescription, setRepoDescription] = useState(\"\");\n    const [httpFlag, setHttpFlag] = useState(true);\n    const [inputFlag, setInputFlag] = useState(true);\n    const [searchFlag, setSearchFlag] = useState(false);\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        setUsername(e.target.value);\n    }\n\n    const handleClick = async () => {\n        // console.log(username);\n        try {\n            // const result = await axios(listUrl);\n            const result =  await request('GET /users/{username}/repos', {\n                username: username\n            })\n            console.log(\"useruser: \", username);\n            console.log(result);\n            setRepo(result);\n            setHttpFlag(true);\n\n        } catch(err) {\n            if (err.name === \"HttpError\") {\n                // let checkUser = [false];\n                setHttpFlag(false);\n            }\n            // if (username === '') {\n            //     setHttpFlag(false);\n            // }\n            // console.log(err.name);\n        }\n        console.log(repo);\n        setSearchFlag(true);\n        navigate(`/users/${username}/repos`);\n    }\n\n    console.log(httpFlag);\n\n    console.log(\"continue\");\n    return ( \n        <div>\n            {(searchFlag === false) ? (\n            <div className=\"search\">\n                <input className=\"username\" type=\"text\" placeholder=\"Search\" value={username} onChange={handleChange}></input>\n                <button className=\"searchBtn\" onClick={handleClick}>Enter</button>\n\n            </div>\n            ) : (<div />\n                )}\n            <div>  \n                <Routes>\n                    <Route path=\"/\" element={<div />}></Route>\n\n                        {inputFlag &&\n                            <Route path=\"/users/:username/repos\" element={\n                            httpFlag === true ? (\n                                // <Results repo={ repo } header={ username }/>\n                                <Results repo={ repo } />\n                            ) : (\n                                <div className=\"unvalidDiv\">\n                                    <Link to=\"/\" className=\"backToSearch\" onClick={() => {window.location.href=\"/\"}}>Back</Link>\n                                    <p className=\"unvalid\">Unvalid User!</p>\n                                </div>\n                            )} \n                        />}\n\n                    <Route path=\"/users/:username/repos/:repoName\" element={<RepoPage />}></Route>\n                </Routes>\n            </div>\n\n        </div>\n     );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}