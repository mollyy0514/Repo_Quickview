[{"/Users/molly/Desktop/React/Repo_Quickview/src/index.js":"1","/Users/molly/Desktop/React/Repo_Quickview/src/App.js":"2","/Users/molly/Desktop/React/Repo_Quickview/src/Title.js":"3","/Users/molly/Desktop/React/Repo_Quickview/src/Search.js":"4","/Users/molly/Desktop/React/Repo_Quickview/src/RepoPage.js":"5","/Users/molly/Desktop/React/Repo_Quickview/src/Results.js":"6"},{"size":221,"mtime":1648193812000,"results":"7","hashOfConfig":"8"},{"size":419,"mtime":1648716079136,"results":"9","hashOfConfig":"8"},{"size":225,"mtime":1648193812000,"results":"10","hashOfConfig":"8"},{"size":3363,"mtime":1648716914580,"results":"11","hashOfConfig":"8"},{"size":2899,"mtime":1648225337057,"results":"12","hashOfConfig":"8"},{"size":6578,"mtime":1648715983353,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c3rj8j",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"21"},"/Users/molly/Desktop/React/Repo_Quickview/src/index.js",[],[],"/Users/molly/Desktop/React/Repo_Quickview/src/App.js",["37","38","39"],[],"/*\nREFERENCE:\nrepoList: https://www.youtube.com/watch?v=ue-Ypk4xDJc\nrequest: https://github.com/octokit/request.js#request\n*/\n\nimport {BrowserRouter as Router, Route, Switch, Routes} from 'react-router-dom';\n\nimport Title from \"./Title.js\";\nimport Search from \"./Search.js\";\n\n\nfunction App() {\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Title />\n\t\t\t\t<Search />\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n",["40","41"],"/Users/molly/Desktop/React/Repo_Quickview/src/Title.js",[],[],"/Users/molly/Desktop/React/Repo_Quickview/src/Search.js",["42","43","44","45"],[],"import { useState, useEffect } from \"react\";\nimport { request } from \"@octokit/request\";\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport Results from \"./Results\";\nimport RepoPage from \"./RepoPage\";\n\nconst Search = () => {\n\n    // 為什麼要設 useState？因為這樣才能讓他在整個程式碼裡面都使用\n    const [username, setUsername] = useState('');\n    const [repo, setRepo] = useState([]);\n    const [httpFlag, setHttpFlag] = useState(true);\n    const [inputFlag, setInputFlag] = useState(true);\n    const [searchFlag, setSearchFlag] = useState(false);\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        setUsername(e.target.value);\n    }\n\n    const handleClick = async () => {\n        // console.log(username);\n        try {\n            const result =  await request('GET /users/{username}/repos', {\n                username: username,\n                per_page: 10,\n                sort: 'created'\n            })\n            console.log(\"useruser: \", username);\n            console.log(result);\n            setRepo(result);\n            setHttpFlag(true);\n            setInputFlag(true);\n        } catch(err) {\n            if (err.name === \"HttpError\") {\n                setHttpFlag(false);\n                setInputFlag(true);\n            }\n            if (username == '') {\n                setHttpFlag(false);\n                setInputFlag(false);\n            }\n            console.log(\"username\", username);\n        }\n        console.log(repo);\n        setSearchFlag(true);\n        navigate(`/users/${username}/repos`);\n    }\n\n    console.log(httpFlag);\n\n    console.log(\"continue\");\n    return ( \n        <div>\n            {(searchFlag === false) ? (\n            <div className=\"search\">\n                <input className=\"username\" type=\"text\" placeholder=\"Search\" value={username} onChange={handleChange}></input>\n                <button type=\"submit\" className=\"searchBtn\" onClick={handleClick}>GO !</button>\n\n            </div>\n            ) : (<div />\n                )}\n            <div>  \n                <Routes>\n                    <Route path=\"/Repo_Quickview/\" element={<div />}></Route>\n                    <Route path=\"/users/:username/repos\" element={\n                        httpFlag ? (\n                            <Results repo={ repo } header={ username }/>\n                        ) : (\n                            <div className=\"invalidDiv\">\n                                <Link to=\"/Repo_Quickview/\" className=\"backToSearch\" onClick={() => {window.location.href=\"/\"}}>Back</Link>\n                                <p className=\"invalid\">No Match User!</p>\n                            </div>\n                        )} \n                    />\n                    <Route path=\"/users//repos\" element={\n                        <div className=\"invalidDiv\">\n                            <Link to=\"/Repo_Quickview/\" className=\"backToSearch\" onClick={() => {window.location.href=\"/\"}}>Back</Link>\n                            <p className=\"invalid\">Invalid Input!</p>\n                        </div>\n                    } />\n\n                    <Route path=\"/users/:username/repos/:repoName\" element={<RepoPage />}></Route>\n                </Routes>\n            </div>\n\n        </div>\n     );\n}\n\nexport default Search;","/Users/molly/Desktop/React/Repo_Quickview/src/RepoPage.js",["46","47","48","49","50","51","52"],[],"import { useState, useEffect } from \"react\";\nimport { Route, useParams, Routes, Link, useNavigate } from \"react-router-dom\";\nimport { request } from \"@octokit/request\";\n\nconst RepoPage = () => {\n    const navigate = useNavigate();\n    const { username, repoName } = useParams();\n    const [resultGot, setResultGot] = useState();\n    const [repoInfo, setRepoInfo] = useState({\n        id: '',\n        owner: '',\n        name: '',\n        starCnt: '',\n        time: '',\n        fullname: '',\n        url: '',\n        description: '',\n    });\n    const [errorFlag, setErrorFlag] = useState();\n\n    useEffect(async() => {\n            // console.log(username);\n            try {\n                // const result = await axios(listUrl);\n                const result =  await request('GET /repos/{username}/{repo}', {\n                    username: username,\n                    repo: repoName\n                })\n                console.log(\"useruser: \", username);\n                console.log(result);\n                setResultGot(result);\n                setErrorFlag(true);\n                \n            } catch(err) {\n                if (err.name === \"HttpError\") {\n                    // let checkUser = [false];\n                    setErrorFlag(false);\n                    \n                }\n\n            }\n        \n    }, [])\n\n    useEffect(() => {\n        if (errorFlag == true) {\n            console.log(\"in\");\n            setRepoInfo({\n                id: resultGot.data.id,\n                owner: username,\n                name: repoName,\n                starCnt: resultGot.data.stargazers_count,\n                time: resultGot.data.created_at,\n                fullname: resultGot.data.full_name,\n                url: resultGot.data.html_url,\n                description: resultGot.data.description,\n            });\n            console.log(\"repoInfo\", repoInfo);\n        }\n    }, [errorFlag])\n\n    return ( \n        <div className=\"repoPage\">\n            <Link to=\"/Repo_Quickview/\" className=\"backToSearch\" onClick={() => navigate(-1)}>Back</Link>\n            <header className=\"repoName\">\n                { repoInfo.name }\n            </header>\n            <h3 className=\"owner\">\n                {repoInfo.owner}\n            </h3>\n            <div className=\"urlDiv\">\n            <a className=\"ghUrl\" onClick={() => {window.open(repoInfo.url)}}>GitHub Page</a>\n            </div>\n            <div className=\"infoLi\">\n            <ul>\n                <li>\n                    FULLNAME: {repoInfo.fullname}\n                </li>\n                <li>\n                    STARS: {repoInfo.starCnt}\n                </li>\n                <li>\n                    CREATED TIME: {repoInfo.time}\n                </li>\n                <li>\n                    DESCRIPTION: {repoInfo.description}\n                </li>\n            </ul>\n            </div>\n        </div>\n    );\n}\n \nexport default RepoPage;","/Users/molly/Desktop/React/Repo_Quickview/src/Results.js",["53","54","55","56","57"],[],"import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport UseRepoSearch from \"./UseRepoSearch\";\n\nconst loadFunc = () => {\n    if(!this.state.isLoading) {\n      this.props.fetchItems();\n    }\n  }\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 17,\n    },\n  }));\n\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n\nconst Results = (props) => {\n\n    const { repo } = props;\n    console.log(\"REPOS: \", repo);\n    const searchOwner = props.header;\n\n    var repoInfoList = <li>hihi</li>;\n    const [repoLen, setRepoLen] = useState(-1);\n    const [repoOwner, setRepoOwner] = useState(\"\");\n    const [repoList, setRepoList] = useState([]);\n\n    useEffect(() => {\n        if (repo.data === undefined) {\n            console.log(\"repo data is undefined\")\n        }\n        else {\n            setRepoLen(Object.keys(repo.data).length);\n            // console.log(\"repolen setted\", repo.data, repoLen, Object.keys(repo.data).length)\n            resetRepoList(Object.keys(repo.data).length);\n        }\n        // console.log(typeof(repo));\n    }, [])\n\n\n\n    const resetRepoList = (e) => {\n        if (repo.data === undefined) {\n            console.log(\"repo data is undefined\")\n        }\n        else if (e > 0) {\n            let owner = repo.data[0].owner.login;\n            let newArray = [];\n\n            repo.data.map((item) => {\n                var info = {\n                    id: '',\n                    owner: '',\n                    name: '',\n                    starCnt: '',\n                    description: '',\n                }\n                info.id = item.id;\n                info.owner = searchOwner;\n                info.name = item.name;\n                info.starCnt = item.stargazers_count;\n                info.description = item.description;\n\n                newArray.push(info);\n                console.log(\"debug: \", newArray);\n                \n            })\n            // console.log(\"final input: \", newArray);\n            setRepoOwner(owner);\n            setRepoList(newArray);\n        }\n        else {\n            setRepoList(\"No Repos found!\");\n            // console.log(\"nothing...\")\n        }\n    }\n\n    return (\n        <div className=\"results\">\n            <Link to=\"/Repo_Quickview/\" className=\"backToSearch\" onClick={() => {window.location.href=\"/Repo_Quickview/\"}}>Back</Link>\n            <header className=\"user\">\n                { repoOwner }\n            </header>\n            \n            {(repoLen > 0) ? (<p className=\"sort\">sorted by created time </p>):(<></>)}\n            \n            {/* <ul>\n                {(repoLen === -1) ? (\n                    repoInfoList = <li></li>\n                 ) : ((repoLen > 0) ? (\n                        repoInfoList = repoList.map((item) => \n                        <li className=\"repoList\" key={ item.id }>\n                            <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                { item.name } { item.starCnt }\n                            </Link>\n                        </li>)\n                    ) : (\n                        repoInfoList = <li className=\"noRepo\">No Repositary found.</li>\n                    )\n                 )}\n            </ul> */}\n\n            {(repoLen === -1) ? (\n                repoInfoList = <li></li>\n                 ) : ((repoLen > 0) ? (\n                        <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                                <TableHead>\n                                <TableRow>\n                                    <StyledTableCell>Repository Name</StyledTableCell>\n                                    <StyledTableCell align=\"right\">Description</StyledTableCell>\n                                    <StyledTableCell align=\"right\">Stars&nbsp;</StyledTableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody className=\"repoTable\">\n                                {repoInfoList = repoList.map((item) => (\n                                    <StyledTableRow hover role=\"checkbox\" key={item.id}>\n                                        <StyledTableCell className=\"tableRepoName\" component=\"th\" scope=\"row\">\n                                            <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                {item.name}\n                                            </Link>\n                                        </StyledTableCell>\n                                        <StyledTableCell className=\"starCnt\" align=\"right\">\n                                                <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                    {item.description}\n                                                </Link>\n                                            </StyledTableCell>\n                                        <StyledTableCell className=\"starCnt\" align=\"right\">\n                                            <Link to={`/users/${repoOwner}/repos/${item.name}`}>\n                                                {item.starCnt}\n                                            </Link>\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    ) : (\n                        repoInfoList = <li className=\"noRepo\">No Repositary found.</li>\n                    )\n                 )}\n        </div>\n     );\n}\n \nexport default Results;\n",{"ruleId":"58","severity":1,"message":"59","line":7,"column":34,"nodeType":"60","messageId":"61","endLine":7,"endColumn":39},{"ruleId":"58","severity":1,"message":"62","line":7,"column":41,"nodeType":"60","messageId":"61","endLine":7,"endColumn":47},{"ruleId":"58","severity":1,"message":"63","line":7,"column":49,"nodeType":"60","messageId":"61","endLine":7,"endColumn":55},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"68","line":1,"column":20,"nodeType":"60","messageId":"61","endLine":1,"endColumn":29},{"ruleId":"58","severity":1,"message":"69","line":3,"column":26,"nodeType":"60","messageId":"61","endLine":3,"endColumn":32},{"ruleId":"58","severity":1,"message":"70","line":15,"column":12,"nodeType":"60","messageId":"61","endLine":15,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":41,"column":26,"nodeType":"73","messageId":"74","endLine":41,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"58","severity":1,"message":"63","line":2,"column":28,"nodeType":"60","messageId":"61","endLine":2,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":21,"column":15,"nodeType":"77","endLine":43,"endColumn":6},{"ruleId":"75","severity":1,"message":"78","line":43,"column":8,"nodeType":"79","endLine":43,"endColumn":10,"suggestions":"80"},{"ruleId":"71","severity":1,"message":"72","line":46,"column":23,"nodeType":"73","messageId":"74","endLine":46,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":60,"column":8,"nodeType":"79","endLine":60,"endColumn":19,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":72,"column":13,"nodeType":"85","endLine":72,"endColumn":78},{"ruleId":"58","severity":1,"message":"86","line":14,"column":8,"nodeType":"60","messageId":"61","endLine":14,"endColumn":21},{"ruleId":"58","severity":1,"message":"87","line":16,"column":7,"nodeType":"60","messageId":"61","endLine":16,"endColumn":15},{"ruleId":"75","severity":1,"message":"88","line":63,"column":8,"nodeType":"79","endLine":63,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":75,"column":34,"nodeType":"77","messageId":"92","endLine":75,"endColumn":36},{"ruleId":"58","severity":1,"message":"93","line":164,"column":25,"nodeType":"60","messageId":"61","endLine":164,"endColumn":37},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Routes' is defined but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'useEffect' is defined but never used.","'Router' is defined but never used.","'inputFlag' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'repoName' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has missing dependencies: 'repoInfo', 'repoName', 'resultGot.data.created_at', 'resultGot.data.description', 'resultGot.data.full_name', 'resultGot.data.html_url', 'resultGot.data.id', 'resultGot.data.stargazers_count', and 'username'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRepoInfo' needs the current value of 'resultGot.data.id'.",["97"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'UseRepoSearch' is defined but never used.","'loadFunc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'repo.data' and 'resetRepoList'. Either include them or remove the dependency array.",["98"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'repoInfoList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [repoName, username]",{"range":"105","text":"106"},"Update the dependencies array to be: [errorFlag, repoInfo, repoName, resultGot.data.created_at, resultGot.data.description, resultGot.data.full_name, resultGot.data.html_url, resultGot.data.id, resultGot.data.stargazers_count, username]",{"range":"107","text":"108"},"Update the dependencies array to be: [repo.data, resetRepoList]",{"range":"109","text":"110"},[1319,1321],"[repoName, username]",[1882,1893],"[errorFlag, repoInfo, repoName, resultGot.data.created_at, resultGot.data.description, resultGot.data.full_name, resultGot.data.html_url, resultGot.data.id, resultGot.data.stargazers_count, username]",[1903,1905],"[repo.data, resetRepoList]"]